{"version":3,"sources":["app/basketSlice.js","layout/partial/BasketList.jsx","layout/partial/BasketBtn.jsx","layout/Header.jsx","layout/partial/Product.jsx","layout/Grocery.tsx","layout/partial/PurchasedList.tsx","layout/Purchased.tsx","layout/Main.tsx","App.tsx","app/store.ts","serviceWorker.ts","index.tsx"],"names":["basketSlice","createSlice","name","initialState","pendings","purchased","isClear","reducers","addItem","state","action","some","item","payload","map","id","count","removeItem","filter","incrementQuantity","reduceQuantity","buyProduct","console","log","obj","date","Date","toISOString","products","length","clearPendings","toggleClear","actions","selectPendings","basket","selectPurchased","selectIsClear","BasketList","setShowList","listRef","useRef","dispatch","useDispatch","basket_list","useSelector","click_outside","evt","current","contains","target","useEffect","document","addEventListener","removeEventListener","className","ref","index","LowerButtons","onClick","DeleteBtn","QuantityBtns","reduce","BasketBtn","useState","showList","Header","Product","product","test","setTest","onAnimationEnd","Grocery","res","PurchasedList","list","accumulator","currentIndex","array","Purchased","purchased_list","toLocaleString","weekday","year","month","day","Main","show","setShow","App","store","configureStore","reducer","basketReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.345f72d8.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  pendings: [],\r\n  purchased: [],\r\n  isClear: false,\r\n};\r\n\r\nexport const basketSlice = createSlice({\r\n  name: \"basket\",\r\n  initialState: initialState,\r\n  reducers: {\r\n    addItem: (state, action) => {\r\n      // if double increment count\r\n      if (state.pendings.some((item) => item.name === action.payload.name)) {\r\n        state.pendings.map((item) => {\r\n          if (item.id === action.payload.id) {\r\n            return { ...item, count: item.count++ };\r\n          }\r\n          return item;\r\n        });\r\n      } else {\r\n        state.pendings = [...state.pendings, { ...action.payload, count: 1 }];\r\n      }\r\n    },\r\n    removeItem: (state, action) => {\r\n      state.pendings = state.pendings.filter((item) => {\r\n        return item.name !== action.payload.name;\r\n      });\r\n    },\r\n    incrementQuantity: (state, action) => {\r\n      state.pendings.map((item) => {\r\n        if (item.id === action.payload.id) {\r\n          return { ...item, count: item.count++ };\r\n        }\r\n        return item;\r\n      });\r\n    },\r\n    reduceQuantity: (state, action) => {\r\n      state.pendings.map((item) => {\r\n        if (item.id === action.payload.id && item.count > 1) {\r\n          return { ...item, count: item.count-- };\r\n        }\r\n\r\n        return item;\r\n      });\r\n    },\r\n    buyProduct: (state, action) => {\r\n      console.log(action.payload);\r\n      const time = new Date().toISOString();\r\n      const obj = { date: time, products: action.payload };\r\n      state.pendings = [];\r\n      if (state.purchased.length > 0) {\r\n        state.purchased = [obj, ...state.purchased];\r\n      } else {\r\n        state.purchased = [obj];\r\n      }\r\n    },\r\n    clearPendings: (state) => {\r\n      state.pendings = [];\r\n    },\r\n    toggleClear: (state) => {\r\n      state.isClear = !state.isClear;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  addItem,\r\n  removeItem,\r\n  incrementQuantity,\r\n  reduceQuantity,\r\n  buyProduct,\r\n  clearPendings,\r\n  toggleClear,\r\n} = basketSlice.actions;\r\n\r\nexport const selectPendings = (state) => state.basket.pendings;\r\nexport const selectPurchased = (state) => state.basket.purchased;\r\nexport const selectIsClear = (state) => state.basket.isClear;\r\n\r\nexport default basketSlice.reducer;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  incrementQuantity,\r\n  reduceQuantity,\r\n  selectPendings,\r\n  buyProduct,\r\n  removeItem,\r\n  toggleClear,\r\n  selectIsClear,\r\n  clearPendings,\r\n} from \"../../app/basketSlice\";\r\nimport { AiOutlineMinus, AiOutlinePlus } from \"react-icons/ai\";\r\nimport { IoTrashSharp } from \"react-icons/io5\";\r\nimport { useEffect, useRef } from \"react\";\r\n\r\nconst BasketList = ({ setShowList }) => {\r\n  const listRef = useRef(null);\r\n  const dispatch = useDispatch();\r\n  const basket_list = useSelector(selectPendings);\r\n  const isClear = useSelector(selectIsClear);\r\n  const click_outside = (evt) => {\r\n    if (listRef.current && !listRef.current.contains(evt.target)) {\r\n      setShowList(false);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    document.addEventListener(\"click\", click_outside);\r\n    return () => {\r\n      document.removeEventListener(\"click\", click_outside);\r\n      if (isClear) {\r\n        dispatch(toggleClear());\r\n      }\r\n    };\r\n  });\r\n\r\n  return (\r\n    <ul className=\"basket-list\" ref={listRef}>\r\n      {basket_list.length === 0 && <li>Your Basket is Empty</li>}\r\n      {basket_list.map((item, index) => (\r\n        <li key={item.name + index}>\r\n          <div className=\"info-box\">\r\n            <strong>{item.name}</strong>\r\n            <span>{`Quantity: ${item.count}`}</span>\r\n          </div>\r\n          {isClear ? <DeleteBtn item={item} /> : <QuantityBtns item={item} />}\r\n        </li>\r\n      ))}\r\n      {basket_list.length > 0 && <LowerButtons />}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default BasketList;\r\n\r\nconst LowerButtons = () => {\r\n  const dispatch = useDispatch();\r\n  const isClear = useSelector(selectIsClear);\r\n  const basket_list = useSelector(selectPendings);\r\n  const clear_all = () => {\r\n    dispatch(clearPendings());\r\n    return dispatch(toggleClear());\r\n  };\r\n\r\n  return (\r\n    <div className=\"lower-button\">\r\n      {!isClear ? (\r\n        <>\r\n          <span className=\"clear-btn\" onClick={() => dispatch(toggleClear())}>\r\n            Clear\r\n          </span>\r\n          <span\r\n            className=\"done-btn\"\r\n            onClick={() => dispatch(buyProduct(basket_list))}\r\n          >\r\n            Buy\r\n          </span>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <span className=\"clear-btn\" onClick={clear_all}>\r\n            All\r\n          </span>\r\n          <span className=\"done-btn\" onClick={() => dispatch(toggleClear())}>\r\n            Done\r\n          </span>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst DeleteBtn = ({ item }) => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div className=\"li-buttons\">\r\n      <span className=\"trash\" onClick={() => dispatch(removeItem(item))}>\r\n        <IoTrashSharp />\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst QuantityBtns = ({ item }) => {\r\n  const dispatch = useDispatch();\r\n  const reduce = (item) => {\r\n    if (item.count > 1) {\r\n      dispatch(reduceQuantity(item));\r\n    } else {\r\n      dispatch(removeItem(item));\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"li-buttons\">\r\n      <span className=\"plus\" onClick={() => dispatch(incrementQuantity(item))}>\r\n        <AiOutlinePlus />\r\n      </span>\r\n      <span className=\"minus\" onClick={() => reduce(item)}>\r\n        <AiOutlineMinus />\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n","import { useState } from \"react\";\r\nimport BasketList from \"./BasketList\";\r\nimport { IoBasketSharp } from \"react-icons/io5\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectPendings } from \"../../app/basketSlice\";\r\n\r\nconst BasketBtn = () => {\r\n  const [showList, setShowList] = useState(false);\r\n  const pendings = useSelector(selectPendings);\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"basket-btn\"\r\n        onClick={() => setShowList((state) => !state)}\r\n      >\r\n        <IoBasketSharp />\r\n        <div className=\"count\">\r\n          <span>{pendings.length}</span>\r\n        </div>\r\n      </div>\r\n      {showList && <BasketList setShowList={setShowList} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BasketBtn;\r\n","import BasketBtn from \"./partial/BasketBtn\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header>\r\n      <h1>Basket App</h1>\r\n      <BasketBtn />\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { useState } from \"react\";\r\nimport { IoIosAddCircleOutline } from \"react-icons/io\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addItem } from \"../../app/basketSlice\";\r\n\r\nconst Product = ({ product }) => {\r\n  const dispatch = useDispatch(addItem);\r\n  const [test, setTest] = useState(false);\r\n  const add_item = () => {\r\n    dispatch(addItem(product));\r\n    setTest(true);\r\n  };\r\n  return (\r\n    <div className=\"product\">\r\n      <span\r\n        className={`add-btn ${test ? \"animate\" : \"\"}`}\r\n        onClick={add_item}\r\n        onAnimationEnd={() => setTest(false)}\r\n      >\r\n        <IoIosAddCircleOutline />\r\n      </span>\r\n\r\n      <span>{product.name}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","import Product from \"./partial/Product\";\r\nimport res from \"../assets/res.json\";\r\n\r\nconst Grocery: React.FunctionComponent = () => {\r\n  return (\r\n    <div className=\"grocery\">\r\n      {res.products.map((product: any) => (\r\n        <Product product={product} key={product.id} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Grocery;\r\n","import React from \"react\";\r\n\r\ninterface Props {\r\n  list: any[];\r\n}\r\n\r\nconst PurchasedList: React.FunctionComponent<Props> = ({ list = [] }) => {\r\n  const get_total = () => {\r\n    const total = list.reduce((accumulator, current, currentIndex, array) => {\r\n      accumulator = accumulator + current.count;\r\n      return accumulator;\r\n    }, 0);\r\n    return total;\r\n  };\r\n  return (\r\n    <ul>\r\n      {list.map((item: any) => (\r\n        <li key={item.name}>{`${item.count} x ${item.name}`}</li>\r\n      ))}\r\n      <span>{`Total: ${get_total()}`}</span>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default PurchasedList;\r\n","import { useSelector } from \"react-redux\";\r\nimport { selectPurchased } from \"../app/basketSlice\";\r\nimport PurchasedList from \"./partial/PurchasedList\";\r\n\r\nconst Purchased: React.FunctionComponent = () => {\r\n  const purchased_list = useSelector(selectPurchased);\r\n  const format_date = (date: string) => {\r\n    return new Date(date).toLocaleString(\"it-IT\", {\r\n      weekday: \"long\",\r\n      year: \"numeric\",\r\n      month: \"long\",\r\n      day: \"numeric\",\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"purchased\">\r\n      {purchased_list.map((item: any) => (\r\n        <div key={item.date} className=\"purchased-list\">\r\n          <strong>{format_date(item.date)}</strong>\r\n          <PurchasedList list={item.products} />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Purchased;\r\n","import React, { useState } from \"react\";\r\nimport Grocery from \"./Grocery\";\r\n\r\nimport Purchased from \"./Purchased\";\r\n\r\nconst Main: React.FunctionComponent = () => {\r\n  const [show, setShow] = useState(true);\r\n  return (\r\n    <main>\r\n      <div className=\"nav-btns\">\r\n        <span className={show ? \"active\" : \"\"} onClick={() => setShow(true)}>\r\n          Grocery\r\n        </span>\r\n        <span className={!show ? \"active\" : \"\"} onClick={() => setShow(false)}>\r\n          Purchased\r\n        </span>\r\n        <span className={`slideblock ${show ? \"\" : \"moved\"}`}></span>\r\n      </div>\r\n      {show ? <Grocery /> : <Purchased />}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React from \"react\";\nimport Header from \"./layout/Header\";\nimport \"./styles/layout.scss\";\nimport \"./styles/basket.scss\";\nimport Main from \"./layout/Main\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Header />\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore, ThunkAction, Action } from \"@reduxjs/toolkit\";\nimport basketReducer from \"./basketSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    basket: basketReducer,\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}