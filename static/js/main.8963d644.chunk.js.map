{"version":3,"sources":["app/asyncDeleteItem.ts","app/basketSlice.ts","layout/partial/ListButtons.tsx","layout/partial/BasketList.tsx","layout/partial/BasketBtn.tsx","layout/Header.jsx","layout/partial/Product.tsx","layout/Grocery.tsx","layout/partial/PurchasedList.tsx","layout/Purchased.tsx","layout/Main.tsx","App.tsx","app/store.ts","serviceWorker.ts","index.tsx"],"names":["asyncDeleteItem","item","Promise","resolve","setTimeout","asyncDelete","createAsyncThunk","a","response","basketSlice","createSlice","name","initialState","pendings","purchased","isClear","status","reducers","addItem","state","action","some","payload","map","id","count","removeItem","filter","incrementQuantity","reduceQuantity","buyProduct","console","log","obj","date","Date","toISOString","products","length","clearPendings","toggleClear","extraReducers","builder","addCase","pending","fulfilled","actions","selectPendings","basket","selectPurchased","selectIsClear","LowerButtons","memo","dispatch","useDispatch","useSelector","basket_list","className","onClick","basketList","document","querySelector","classList","add","remove","QuantityBtns","reduce","li_item","replace","delete_item","DeleteBtn","BasketList","toggle_list","wrapperRef","useRef","check_if_is_clear","useCallback","is_click_outside","evt","ref","current","contains","target","useEffect","addEventListener","removeEventListener","accumulator","index","BasketBtn","useState","showList","setShowList","Header","Product","product","reset","setReset","onAnimationEnd","Grocery","res","PurchasedList","list","Purchased","purchased_list","toLocaleString","weekday","year","month","day","Main","show","setShow","test","navigator","userAgent","require","App","store","configureStore","reducer","basketReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"4xCAAe,SAASA,EAAgBC,GACtC,OAAO,IAAIC,SAAQ,SAACC,GAClBC,YAAW,kBAAMD,EAAQF,KAAO,QCQpC,IAOaI,EAAcC,YAAiB,gBAAD,uCAAkB,WAAOL,GAAP,eAAAM,EAAA,sEACpCP,EAAgBC,GADoB,cACrDO,EADqD,yBAEpDA,GAFoD,2CAAlB,uDAK9BC,EAAcC,YAAY,CACrCC,KAAM,SACNC,aAd6B,CAC7BC,SAAU,GACVC,UAAW,GACXC,SAAS,EACTC,OAAQ,QAWRC,SAAU,CACRC,QAAS,SAACC,EAAOC,GAEXD,EAAMN,SAASQ,MAAK,SAACpB,GAAD,OAAUA,EAAKU,OAASS,EAAOE,QAAQX,QAC7DQ,EAAMN,SAASU,KAAI,SAACtB,GAClB,OAAIA,EAAKuB,KAAOJ,EAAOE,QAAQE,GACtB,2BAAKvB,GAAZ,IAAkBwB,MAAOxB,EAAKwB,UAEzBxB,KAGTkB,EAAMN,SAAN,sBAAqBM,EAAMN,UAA3B,4BAA0CO,EAAOE,SAAjD,IAA0DG,MAAO,OAGrEC,WAAY,SAACP,EAAOC,GAClBD,EAAMN,SAAWM,EAAMN,SAASc,QAAO,SAAC1B,GACtC,OAAOA,EAAKU,OAASS,EAAOE,QAAQX,SAGxCiB,kBAAmB,SAACT,EAAOC,GACzBD,EAAMN,SAASU,KAAI,SAACtB,GAClB,OAAIA,EAAKuB,KAAOJ,EAAOE,QAAQE,GACtB,2BAAKvB,GAAZ,IAAkBwB,MAAOxB,EAAKwB,UAEzBxB,MAGX4B,eAAgB,SAACV,EAAOC,GACtBD,EAAMN,SAASU,KAAI,SAACtB,GAClB,OAAIA,EAAKuB,KAAOJ,EAAOE,QAAQE,IAAMvB,EAAKwB,MAAQ,EACzC,2BAAKxB,GAAZ,IAAkBwB,MAAOxB,EAAKwB,UAGzBxB,MAGX6B,WAAY,SAACX,EAAOC,GAClBW,QAAQC,IAAIZ,EAAOE,SACnB,IACMW,EAAM,CAAEC,MADD,IAAIC,MAAOC,cACEC,SAAUjB,EAAOE,SAC3CH,EAAMN,SAAW,GACbM,EAAML,UAAUwB,OAAS,EAC3BnB,EAAML,UAAN,CAAmBmB,GAAnB,mBAA2Bd,EAAML,YAEjCK,EAAML,UAAY,CAACmB,IAGvBM,cAAe,SAACpB,GACdA,EAAMN,SAAW,IAEnB2B,YAAa,SAACrB,GACZA,EAAMJ,SAAWI,EAAMJ,UAG3B0B,cAAe,SAACC,GACdA,EACGC,QAAQtC,EAAYuC,SAAS,SAACzB,GAC7BA,EAAMH,OAAS,aAEhB2B,QAAQtC,EAAYwC,WAAW,SAAC1B,EAAOC,GACtCD,EAAMH,OAAS,OACfG,EAAMN,SAAWM,EAAMN,SAASc,QAAO,SAAC1B,GACtC,OAAOA,EAAKU,OAASS,EAAOE,QAAQX,cAMvC,EAQHF,EAAYqC,QAPd5B,EADK,EACLA,QAEAU,GAHK,EAELF,WAFK,EAGLE,mBACAC,EAJK,EAILA,eACAC,EALK,EAKLA,WACAS,EANK,EAMLA,cACAC,EAPK,EAOLA,YAGWO,EAAiB,SAAC5B,GAAD,OAAgBA,EAAM6B,OAAOnC,UAC9CoC,EAAkB,SAAC9B,GAAD,OAAgBA,EAAM6B,OAAOlC,WAC/CoC,EAAgB,SAAC/B,GAAD,OAAgBA,EAAM6B,OAAOjC,SAG3CN,IAAf,Q,eC7Fa0C,EAAwCC,gBAAK,WACxD,IAAMC,EAAWC,cACXvC,EAAUwC,YAAYL,GACtBM,EAAcD,YAAYR,GAahC,OACE,qBAAKU,UAAU,eAAf,SACI1C,EAUA,qCACE,sBAAM0C,UAAU,YAAYC,QAxBpC,WACE,IAAMC,EAAgCC,SAASC,cAAc,gBACnD,OAAVF,QAAU,IAAVA,KAAYG,UAAUC,IAAI,aAC1B3D,YAAW,WACTuD,EAAWG,UAAUE,OAAO,aAC5BX,EAASd,KACTc,EAASb,OACR,MAiBG,iBAGA,sBAAMiB,UAAU,WAAWC,QAAS,kBAAML,EAASb,MAAnD,qBAbF,qCACE,sBAAMiB,UAAU,YAAYC,QAAS,kBAAML,EAASb,MAApD,mBAGA,sBAAMiB,UAAU,WAAWC,QAAS,kBAAML,EAASvB,EAAW0B,KAA9D,yBAsBGS,EAA+Cb,gBAAK,YAAe,IAAZnD,EAAW,EAAXA,KAC5DoD,EAAWC,cAMjB,SAASY,EAAOjE,GACVA,EAAKwB,MAAQ,EACf4B,EAASxB,EAAe5B,IAP5B,SAAqBA,GACnB,IAAMkE,EAAUP,SAASC,cAAT,WAA2B5D,EAAKU,KAAKyD,QAAQ,KAAM,MAC5D,OAAPD,QAAO,IAAPA,KAASL,UAAUC,IAAI,eACvBV,EAAShD,EAAYJ,IAMnBoE,CAAYpE,GAGhB,OACE,sBAAKwD,UAAU,aAAf,UACE,sBAAMA,UAAU,OAAOC,QAAS,kBAAML,EAASzB,EAAkB3B,KAAjE,SACE,cAAC,IAAD,MAEF,sBAAMwD,UAAU,QAAQC,QAAS,kBAAMQ,EAAOjE,IAA9C,SACE,cAAC,IAAD,YAMKqE,EAA4ClB,gBAAK,YAAe,IAAZnD,EAAW,EAAXA,KACzDoD,EAAWC,cAMjB,OACE,qBAAKG,UAAU,aAAf,SACE,sBAAMA,UAAU,QAAQC,QAAS,kBAPrC,SAAqBzD,GACnB,IAAMkE,EAAUP,SAASC,cAAT,WAA2B5D,EAAKU,KAAKyD,QAAQ,KAAM,MAC5D,OAAPD,QAAO,IAAPA,KAASL,UAAUC,IAAI,eACvBV,EAAShD,EAAYJ,IAIoBoE,CAAYpE,IAAnD,SACE,cAAC,IAAD,WCvFFsE,EAA6C,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAC9CnB,EAAWC,cACXE,EAAcD,YAAYR,GAC1BhC,EAAUwC,YAAYL,GAEtBuB,EAAaC,iBAAO,MAEpBC,EAAoBC,uBAAY,WAChC7D,GACFsC,EAASb,OAEV,CAACa,EAAUtC,IAER8D,EAAmBD,uBACvB,SAACE,GACC,IAAIC,EAAQ,OAAGN,QAAH,IAAGA,OAAH,EAAGA,EAAYO,QAC3B,GAAKD,IAAOA,EAAIE,SAASH,EAAII,QAM7B,OADAP,IACOH,MAET,CAACA,EAAaG,IAkBhB,OAPAQ,qBAAU,WAER,OADAvB,SAASwB,iBAAiB,QAASP,GAC5B,WACLjB,SAASyB,oBAAoB,QAASR,MAEvC,CAACF,EAAmBE,IAGrB,mCACE,qBAAIpB,UAAU,cAAcsB,IAAKN,EAAjC,UACE,sBAAKhB,UAAU,cAAf,UACE,uBAAMA,UAAU,QAAhB,2BACgB,iCAnBRD,EAAYU,QAAO,SAACoB,EAAkBN,GAElD,OADAM,GAA4BN,EAAQvD,QAEnC,QAkBG,sBAAMgC,UAAU,YAAYC,QAASc,EAArC,SACE,cAAC,IAAD,SAGoB,IAAvBhB,EAAYlB,QACX,sBAAMmB,UAAU,qBAAhB,qCAEF,qBAAKA,UAAU,iBAAf,SACGD,EAAYjC,KAAI,SAACtB,EAAWsF,GAAZ,OACf,qBAA4B9B,UAAWxD,EAAKU,KAAKyD,QAAQ,KAAM,IAA/D,UACE,sBAAKX,UAAU,WAAf,UACE,iCAASxD,EAAKU,OACd,mDAAoBV,EAAKwB,YAE1BV,EAAU,cAACuD,EAAD,CAAWrE,KAAMA,IAAW,cAACgE,EAAD,CAAchE,KAAMA,MALpDA,EAAKU,KAAO4E,QASxB/B,EAAYlB,OAAS,GAAK,cAACa,EAAD,UAOpBC,iBAAKmB,G,QC7EdiB,EAAqC,WACzC,MAAgCC,oBAAkB,GAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACM9E,EAAW0C,YAAYR,GAEvByB,EAAcI,uBAAY,WAC9Be,GAAY,SAACxE,GAAD,OAAYA,OACvB,IAEH,OACE,qCACE,sBAAKsC,UAAU,aAAaC,QAASc,EAArC,UACE,cAAC,IAAD,IACA,qBAAKf,UAAU,QAAf,SACE,+BAAO5C,EAASyB,cAGnBoD,GAAY,cAAC,EAAD,CAAYlB,YAAaA,QAK7BpB,iBAAKoC,GChBLI,EATA,WACb,OACE,mCACE,4CACA,cAAC,EAAD,Q,QCwBSC,EAtBiC,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC3CzC,EAAWC,cACjB,EAA0BmC,oBAAS,GAAnC,mBAAOM,EAAP,KAAcC,EAAd,KAKA,OACE,sBAAKvC,UAAU,UAAf,UACE,sBACEA,UAAS,kBAAasC,EAAQ,UAAY,IAC1CrC,QARW,WACfL,EAASnC,EAAQ4E,IACjBE,GAAS,IAOLC,eAAgB,kBAAMD,GAAS,IAHjC,SAKE,cAAC,IAAD,MAGF,+BAAOF,EAAQnF,W,QCZNuF,EAV0B,WACvC,OACE,qBAAKzC,UAAU,UAAf,SACG0C,EAAI9D,SAASd,KAAI,SAACuE,GAAD,OAChB,cAAC,EAAD,CAASA,QAASA,GAAcA,EAAQtE,UCiBjC4E,EAlBuC,SAAC,GAAmB,IAAD,IAAhBC,YAAgB,MAAT,GAAS,EAQvE,OACE,+BACGA,EAAK9E,KAAI,SAACtB,GAAD,OACR,uCAAwBA,EAAKwB,MAA7B,cAAwCxB,EAAKU,OAApCV,EAAKU,SAEhB,gDAXY0F,EAAKnC,QAAO,SAACoB,EAAaN,GAEtC,OADAM,GAA4BN,EAAQvD,QAEnC,UCgBQ6E,EAvB4B,WACzC,IAAMC,EAAiBhD,YAAYN,GASnC,OACE,sBAAKQ,UAAU,YAAf,UAC6B,IAA1B8C,EAAejE,QAAgB,sBAAMmB,UAAU,UAAhB,sCAC/B8C,EAAehF,KAAI,SAACtB,GAAD,OAClB,sBAAqBwD,UAAU,iBAA/B,UACE,kCAbavB,EAaQjC,EAAKiC,KAZzB,IAAIC,KAAKD,GAAMsE,eAAe,QAAS,CAC5CC,QAAS,OACTC,KAAM,UACNC,MAAO,OACPC,IAAK,eASD,cAAC,EAAD,CAAeP,KAAMpG,EAAKoC,aAFlBpC,EAAKiC,MAZD,IAACA,SCiBR2E,EAlBuB,WACpC,MAAwBpB,oBAAS,GAAjC,mBAAOqB,EAAP,KAAaC,EAAb,KACA,OACE,iCACE,sBAAKtD,UAAU,WAAf,UACE,sBAAMA,UAAWqD,EAAO,SAAW,GAAIpD,QAAS,kBAAMqD,GAAQ,IAA9D,qBAGA,sBAAMtD,UAAYqD,EAAkB,GAAX,SAAepD,QAAS,kBAAMqD,GAAQ,IAA/D,uBAGA,sBAAMtD,UAAS,qBAAgBqD,EAAO,GAAK,cAE5CA,EAAO,cAAC,EAAD,IAAc,cAAC,EAAD,Q,YCbxB,iEAAiEE,KAAKC,UAAUC,WAElFC,EAAQ,IAGRA,EAAQ,IAYKC,MATf,WACE,OACE,sBAAK3D,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCdO4D,EAAQC,YAAe,CAClCC,QAAS,CACPvE,OAAQwE,KCOQC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUX,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJzD,SAASqE,eAAe,SD0HpB,kBAAmBhB,WACrBA,UAAUiB,cAAcC,MACrBC,MAAK,SAACC,GACLA,EAAaC,gBAEdC,OAAM,SAACC,GACNzG,QAAQyG,MAAMA,EAAMC,c","file":"static/js/main.8963d644.chunk.js","sourcesContent":["export default function asyncDeleteItem(item: any) {\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => resolve(item), 210);\r\n  });\r\n}\r\n","import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport asyncDeleteItem from \"./asyncDeleteItem\";\r\n\r\ninterface AppState {\r\n  pendings: any[];\r\n  purchased: any[];\r\n  isClear: boolean;\r\n  status: \"idle\" | \"loading\";\r\n}\r\n\r\nconst initialState: AppState = {\r\n  pendings: [],\r\n  purchased: [],\r\n  isClear: false,\r\n  status: \"idle\",\r\n};\r\n\r\nexport const asyncDelete = createAsyncThunk(\"basket/delete\", async (item: any) => {\r\n  const response = await asyncDeleteItem(item);\r\n  return response;\r\n});\r\n\r\nexport const basketSlice = createSlice({\r\n  name: \"basket\",\r\n  initialState: initialState,\r\n  reducers: {\r\n    addItem: (state, action) => {\r\n      // if double increment count\r\n      if (state.pendings.some((item) => item.name === action.payload.name)) {\r\n        state.pendings.map((item) => {\r\n          if (item.id === action.payload.id) {\r\n            return { ...item, count: item.count++ };\r\n          }\r\n          return item;\r\n        });\r\n      } else {\r\n        state.pendings = [...state.pendings, { ...action.payload, count: 1 }];\r\n      }\r\n    },\r\n    removeItem: (state, action) => {\r\n      state.pendings = state.pendings.filter((item) => {\r\n        return item.name !== action.payload.name;\r\n      });\r\n    },\r\n    incrementQuantity: (state, action) => {\r\n      state.pendings.map((item) => {\r\n        if (item.id === action.payload.id) {\r\n          return { ...item, count: item.count++ };\r\n        }\r\n        return item;\r\n      });\r\n    },\r\n    reduceQuantity: (state, action) => {\r\n      state.pendings.map((item) => {\r\n        if (item.id === action.payload.id && item.count > 1) {\r\n          return { ...item, count: item.count-- };\r\n        }\r\n\r\n        return item;\r\n      });\r\n    },\r\n    buyProduct: (state, action) => {\r\n      console.log(action.payload);\r\n      const time = new Date().toISOString();\r\n      const obj = { date: time, products: action.payload };\r\n      state.pendings = [];\r\n      if (state.purchased.length > 0) {\r\n        state.purchased = [obj, ...state.purchased];\r\n      } else {\r\n        state.purchased = [obj];\r\n      }\r\n    },\r\n    clearPendings: (state) => {\r\n      state.pendings = [];\r\n    },\r\n    toggleClear: (state) => {\r\n      state.isClear = !state.isClear;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(asyncDelete.pending, (state) => {\r\n        state.status = \"loading\";\r\n      })\r\n      .addCase(asyncDelete.fulfilled, (state, action: PayloadAction<any>) => {\r\n        state.status = \"idle\";\r\n        state.pendings = state.pendings.filter((item) => {\r\n          return item.name !== action.payload.name;\r\n        });\r\n      });\r\n  },\r\n});\r\n\r\nexport const {\r\n  addItem,\r\n  removeItem,\r\n  incrementQuantity,\r\n  reduceQuantity,\r\n  buyProduct,\r\n  clearPendings,\r\n  toggleClear,\r\n} = basketSlice.actions;\r\n\r\nexport const selectPendings = (state: any) => state.basket.pendings;\r\nexport const selectPurchased = (state: any) => state.basket.purchased;\r\nexport const selectIsClear = (state: any) => state.basket.isClear;\r\nexport const selectStatus = (state: any) => state.basket.status;\r\n\r\nexport default basketSlice.reducer;\r\n","import { memo } from \"react\";\r\nimport { AiOutlineMinus, AiOutlinePlus } from \"react-icons/ai\";\r\nimport { VscChromeClose } from \"react-icons/vsc\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  asyncDelete,\r\n  buyProduct,\r\n  clearPendings,\r\n  incrementQuantity,\r\n  reduceQuantity,\r\n  selectIsClear,\r\n  selectPendings,\r\n  toggleClear,\r\n} from \"../../app/basketSlice\";\r\n\r\nexport const LowerButtons: React.FunctionComponent = memo(() => {\r\n  const dispatch = useDispatch();\r\n  const isClear = useSelector(selectIsClear);\r\n  const basket_list = useSelector(selectPendings);\r\n\r\n  function clear_all() {\r\n    const basketList: HTMLElement | any = document.querySelector(\".basket-list\");\r\n    basketList?.classList.add(\"clear-all\");\r\n    setTimeout(() => {\r\n      basketList.classList.remove(\"clear-all\");\r\n      dispatch(clearPendings());\r\n      dispatch(toggleClear());\r\n    }, 200);\r\n    return;\r\n  }\r\n\r\n  return (\r\n    <div className=\"lower-button\">\r\n      {!isClear ? (\r\n        <>\r\n          <span className=\"clear-btn\" onClick={() => dispatch(toggleClear())}>\r\n            Clear\r\n          </span>\r\n          <span className=\"done-btn\" onClick={() => dispatch(buyProduct(basket_list))}>\r\n            Buy\r\n          </span>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <span className=\"clear-btn\" onClick={clear_all}>\r\n            All\r\n          </span>\r\n          <span className=\"done-btn\" onClick={() => dispatch(toggleClear())}>\r\n            Done\r\n          </span>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\ninterface Props {\r\n  item: any;\r\n}\r\n\r\nexport const QuantityBtns: React.FunctionComponent<Props> = memo(({ item }) => {\r\n  const dispatch = useDispatch();\r\n  function delete_item(item: any) {\r\n    const li_item = document.querySelector(`.${item.name.replace(/ /g, \"\")}`);\r\n    li_item?.classList.add(\"remove-item\");\r\n    dispatch(asyncDelete(item));\r\n  }\r\n  function reduce(item: any) {\r\n    if (item.count > 1) {\r\n      dispatch(reduceQuantity(item));\r\n    } else {\r\n      delete_item(item);\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"li-buttons\">\r\n      <span className=\"plus\" onClick={() => dispatch(incrementQuantity(item))}>\r\n        <AiOutlinePlus />\r\n      </span>\r\n      <span className=\"minus\" onClick={() => reduce(item)}>\r\n        <AiOutlineMinus />\r\n      </span>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport const DeleteBtn: React.FunctionComponent<Props> = memo(({ item }) => {\r\n  const dispatch = useDispatch();\r\n  function delete_item(item: any) {\r\n    const li_item = document.querySelector(`.${item.name.replace(/ /g, \"\")}`);\r\n    li_item?.classList.add(\"remove-item\");\r\n    dispatch(asyncDelete(item));\r\n  }\r\n  return (\r\n    <div className=\"li-buttons\">\r\n      <span className=\"trash\" onClick={() => delete_item(item)}>\r\n        <VscChromeClose />\r\n      </span>\r\n    </div>\r\n  );\r\n});\r\n","import { memo, useCallback, useEffect, useRef } from \"react\";\r\nimport { VscArrowLeft } from \"react-icons/vsc\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectPendings, selectIsClear, toggleClear } from \"../../app/basketSlice\";\r\nimport { DeleteBtn, LowerButtons, QuantityBtns } from \"./ListButtons\";\r\n\r\ninterface Props {\r\n  toggle_list: any;\r\n}\r\nconst BasketList: React.FunctionComponent<Props> = ({ toggle_list }) => {\r\n  const dispatch = useDispatch();\r\n  const basket_list = useSelector(selectPendings);\r\n  const isClear = useSelector(selectIsClear);\r\n\r\n  const wrapperRef = useRef(null);\r\n\r\n  const check_if_is_clear = useCallback(() => {\r\n    if (isClear) {\r\n      dispatch(toggleClear());\r\n    }\r\n  }, [dispatch, isClear]);\r\n\r\n  const is_click_outside = useCallback(\r\n    (evt: Event) => {\r\n      let ref: any = wrapperRef?.current;\r\n      if (!ref || ref.contains(evt.target)) {\r\n        // --> click inside\r\n        return;\r\n      }\r\n      // --> click outside\r\n      check_if_is_clear();\r\n      return toggle_list();\r\n    },\r\n    [toggle_list, check_if_is_clear]\r\n  );\r\n\r\n  function get_total() {\r\n    const total = basket_list.reduce((accumulator: any, current: any) => {\r\n      accumulator = accumulator + current.count;\r\n      return accumulator;\r\n    }, 0);\r\n    return total;\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"click\", is_click_outside);\r\n    return () => {\r\n      document.removeEventListener(\"click\", is_click_outside);\r\n    };\r\n  }, [check_if_is_clear, is_click_outside]);\r\n\r\n  return (\r\n    <>\r\n      <ul className=\"basket-list\" ref={wrapperRef}>\r\n        <div className=\"basket-head\">\r\n          <span className=\"total\">\r\n            Total amount: <strong>{get_total()}</strong>\r\n          </span>\r\n          <span className=\"close-btn\" onClick={toggle_list}>\r\n            <VscArrowLeft />\r\n          </span>\r\n        </div>\r\n        {basket_list.length === 0 && (\r\n          <span className=\"list-empty-message\">Your basket is empty...</span>\r\n        )}\r\n        <div className=\"scroll-wrapper\">\r\n          {basket_list.map((item: any, index: number) => (\r\n            <li key={item.name + index} className={item.name.replace(/ /g, \"\")}>\r\n              <div className=\"info-box\">\r\n                <strong>{item.name}</strong>\r\n                <span>{`Quantity: ${item.count}`}</span>\r\n              </div>\r\n              {isClear ? <DeleteBtn item={item} /> : <QuantityBtns item={item} />}\r\n            </li>\r\n          ))}\r\n        </div>\r\n        {basket_list.length > 0 && <LowerButtons />}\r\n      </ul>\r\n      {/* <div className=\"trigger\" onClick={triggerClick} /> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(BasketList);\r\n","import React, { memo, useCallback, useState } from \"react\";\r\nimport BasketList from \"./BasketList\";\r\nimport { IoBasketSharp } from \"react-icons/io5\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectPendings } from \"../../app/basketSlice\";\r\n\r\nconst BasketBtn: React.FunctionComponent = () => {\r\n  const [showList, setShowList] = useState<boolean>(false);\r\n  const pendings = useSelector(selectPendings);\r\n\r\n  const toggle_list = useCallback(() => {\r\n    setShowList((state) => !state);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"basket-btn\" onClick={toggle_list}>\r\n        <IoBasketSharp />\r\n        <div className=\"count\">\r\n          <span>{pendings.length}</span>\r\n        </div>\r\n      </div>\r\n      {showList && <BasketList toggle_list={toggle_list} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(BasketBtn);\r\n","import BasketBtn from \"./partial/BasketBtn\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header>\r\n      <h1>Basket App</h1>\r\n      <BasketBtn />\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { useState } from \"react\";\r\nimport { IoIosAddCircleOutline } from \"react-icons/io\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addItem } from \"../../app/basketSlice\";\r\n\r\ninterface Props {\r\n  product: any;\r\n}\r\nconst Product: React.FunctionComponent<Props> = ({ product }) => {\r\n  const dispatch = useDispatch();\r\n  const [reset, setReset] = useState(false);\r\n  const add_item = () => {\r\n    dispatch(addItem(product));\r\n    setReset(true);\r\n  };\r\n  return (\r\n    <div className=\"product\">\r\n      <span\r\n        className={`add-btn ${reset ? \"animate\" : \"\"}`}\r\n        onClick={add_item}\r\n        onAnimationEnd={() => setReset(false)}\r\n      >\r\n        <IoIosAddCircleOutline />\r\n      </span>\r\n\r\n      <span>{product.name}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","import Product from \"./partial/Product\";\r\nimport res from \"../assets/res.json\";\r\n\r\nconst Grocery: React.FunctionComponent = () => {\r\n  return (\r\n    <div className=\"grocery\">\r\n      {res.products.map((product: any) => (\r\n        <Product product={product} key={product.id} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Grocery;\r\n","import React from \"react\";\r\n\r\ninterface Props {\r\n  list: any[];\r\n}\r\n\r\nconst PurchasedList: React.FunctionComponent<Props> = ({ list = [] }) => {\r\n  const get_total = () => {\r\n    const total = list.reduce((accumulator, current) => {\r\n      accumulator = accumulator + current.count;\r\n      return accumulator;\r\n    }, 0);\r\n    return total;\r\n  };\r\n  return (\r\n    <ul>\r\n      {list.map((item: any) => (\r\n        <li key={item.name}>{`${item.count} x ${item.name}`}</li>\r\n      ))}\r\n      <span>{`Total: ${get_total()}`}</span>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default PurchasedList;\r\n","import { useSelector } from \"react-redux\";\r\nimport { selectPurchased } from \"../app/basketSlice\";\r\nimport PurchasedList from \"./partial/PurchasedList\";\r\n\r\nconst Purchased: React.FunctionComponent = () => {\r\n  const purchased_list = useSelector(selectPurchased);\r\n  const format_date = (date: string) => {\r\n    return new Date(date).toLocaleString(\"it-IT\", {\r\n      weekday: \"long\",\r\n      year: \"numeric\",\r\n      month: \"long\",\r\n      day: \"numeric\",\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"purchased\">\r\n      {purchased_list.length === 0 && <span className=\"message\">There is nothing here...</span>}\r\n      {purchased_list.map((item: any) => (\r\n        <div key={item.date} className=\"purchased-list\">\r\n          <strong>{format_date(item.date)}</strong>\r\n          <PurchasedList list={item.products} />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Purchased;\r\n","import React, { useState } from \"react\";\r\nimport Grocery from \"./Grocery\";\r\n\r\nimport Purchased from \"./Purchased\";\r\n\r\nconst Main: React.FunctionComponent = () => {\r\n  const [show, setShow] = useState(true);\r\n  return (\r\n    <main>\r\n      <div className=\"nav-btns\">\r\n        <span className={show ? \"active\" : \"\"} onClick={() => setShow(true)}>\r\n          Grocery\r\n        </span>\r\n        <span className={!show ? \"active\" : \"\"} onClick={() => setShow(false)}>\r\n          Purchased\r\n        </span>\r\n        <span className={`slideblock ${show ? \"\" : \"moved\"}`}></span>\r\n      </div>\r\n      {show ? <Grocery /> : <Purchased />}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import Header from \"./layout/Header\";\nimport Main from \"./layout/Main\";\nimport \"./styles/layout.scss\";\nimport \"./styles/basket.scss\";\n\nif (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {\n  // mobile\n  require(\"./styles/layout-mobile.scss\");\n} else {\n  // desktop\n  require(\"./styles/custom-scrollbar-desktop.scss\");\n}\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Header />\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore, ThunkAction, Action } from \"@reduxjs/toolkit\";\nimport basketReducer from \"./basketSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    basket: basketReducer,\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}